SET enable_seqscan = off;
-- hamming
CREATE TABLE t (val bit(3));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'val' as the Apache Cloudberry data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
INSERT INTO t (val) VALUES (B'000'), (B'100'), (B'111'), (NULL);
CREATE INDEX ON t USING ivfflat (val bit_hamming_ops) WITH (lists = 1);
NOTICE:  ivfflat index created with little data
DETAIL:  This will cause low recall.
HINT:  Drop the index until the table has more data.
NOTICE:  ivfflat index created with little data  (seg0 10.13.9.77:7002 pid=27626)
DETAIL:  This will cause low recall.
HINT:  Drop the index until the table has more data.
INSERT INTO t (val) VALUES (B'110');
SELECT * FROM t ORDER BY val <~> B'111';
 val 
-----
 111
 110
 100
 000
(4 rows)

SELECT COUNT(*) FROM (SELECT * FROM t ORDER BY val <~> (SELECT NULL::bit)) t2;
 count 
-------
     4
(1 row)

DROP TABLE t;
-- varbit
CREATE TABLE t (val varbit(3));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'val' as the Apache Cloudberry data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE INDEX ON t USING ivfflat (val bit_hamming_ops) WITH (lists = 1);
ERROR:  type not supported for ivfflat index
CREATE INDEX ON t USING ivfflat ((val::bit(3)) bit_hamming_ops) WITH (lists = 1);
NOTICE:  ivfflat index created with little data
DETAIL:  This will cause low recall.
HINT:  Drop the index until the table has more data.
NOTICE:  ivfflat index created with little data  (seg0 10.13.9.77:7002 pid=27626)
DETAIL:  This will cause low recall.
HINT:  Drop the index until the table has more data.
NOTICE:  ivfflat index created with little data  (seg1 10.13.9.77:7003 pid=27627)
DETAIL:  This will cause low recall.
HINT:  Drop the index until the table has more data.
NOTICE:  ivfflat index created with little data  (seg2 10.13.9.77:7004 pid=27628)
DETAIL:  This will cause low recall.
HINT:  Drop the index until the table has more data.
CREATE INDEX ON t USING ivfflat ((val::bit(64001)) bit_hamming_ops) WITH (lists = 1);
ERROR:  column cannot have more than 64000 dimensions for ivfflat index
CREATE INDEX ON t USING ivfflat ((val::bit(2)) bit_hamming_ops) WITH (lists = 5);
NOTICE:  ivfflat index created with little data
DETAIL:  This will cause low recall.
HINT:  Drop the index until the table has more data.
NOTICE:  ivfflat index created with little data  (seg2 10.13.9.77:7004 pid=27628)
DETAIL:  This will cause low recall.
HINT:  Drop the index until the table has more data.
NOTICE:  ivfflat index created with little data  (seg1 10.13.9.77:7003 pid=27627)
DETAIL:  This will cause low recall.
HINT:  Drop the index until the table has more data.
NOTICE:  ivfflat index created with little data  (seg0 10.13.9.77:7002 pid=27626)
DETAIL:  This will cause low recall.
HINT:  Drop the index until the table has more data.
DROP TABLE t;
